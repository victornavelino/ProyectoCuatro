/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.articulos;

import entidades.articulo.Articulo;
import entidades.articulo.ListaPrecio;
import entidades.articulo.PrecioArticulo;
import entidades.articulo.SubCategoria;
import entidades.articulo.UnidadMedida;
import entidades.articulo.costo.ListaCosto;
import entidades.articulo.costo.ValorCosto;
import entidades.articulo.marca.Marca;
import facade.ArticuloFacade;
import facade.ListaCostoFacade;
import facade.ListaPrecioFacade;
import facade.MarcaFacade;
import facade.PrecioArticuloFacade;
import facade.SubCategoriaFacade;
import facade.UnidadMedidaFacade;
import facade.ValorCostoFacade;
import includes.Comunes;
import static includes.Comunes.redondear;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import vista.categorias.DiagSubCategoria;

/**
 *
 * @author hugo
 */
public class DiagArticulo extends javax.swing.JDialog {

    private Articulo articulo;
    private String tipoOperacion;
    private List<PrecioArticulo> lstPrecioArticulo;
    private ModeloTablaNoEditable modeloTablaPrecioArticulo;
    private BigDecimal porcentajeListaCosto = new BigDecimal("0.00");
    private BigDecimal porcentajeListaPrecio = new BigDecimal("0.00");
    private BigDecimal precioListaCosto = new BigDecimal("0.00");
    private BigDecimal precioListaPrecio = new BigDecimal("0.00");
    private BigDecimal nuevoPrecio = new BigDecimal("0.00");

    /**
     * Creates new form DiagArticulo
     */
    public DiagArticulo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();
    }

    public DiagArticulo(java.awt.Frame parent, boolean modal, String tipoOperacion) {
        super(parent, modal);
        initComponents();

        this.tipoOperacion = tipoOperacion;
        inicializarComponentes();
    }

    public DiagArticulo(java.awt.Frame parent, boolean modal, String tipoOperacion, Articulo articulo, List<PrecioArticulo> lstPreArt) {
        super(parent, modal);
        initComponents();
        this.articulo = articulo;
        this.tipoOperacion = tipoOperacion;
        this.lstPrecioArticulo = lstPreArt;
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfDescripcion = new javax.swing.JTextField();
        tfDescripcionRed = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfCodigoBarra = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboSubCategoria = new javax.swing.JComboBox();
        btnNuevaSubcategoria = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cboUnidadDeMedida = new javax.swing.JComboBox();
        btnNuevaMarca = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tfprecocosto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cboMarca = new javax.swing.JComboBox();
        btnNuevaUnidadMedida = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cboListaCosto = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        cboValor = new javax.swing.JComboBox();
        jbActualizarPrecio = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrecios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel1.text")); // NOI18N

        tfDescripcion.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.tfDescripcion.text")); // NOI18N

        tfDescripcionRed.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.tfDescripcionRed.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel3.text")); // NOI18N

        tfCodigoBarra.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.tfCodigoBarra.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel4.text")); // NOI18N

        cboSubCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnNuevaSubcategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnNuevaSubcategoria.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.btnNuevaSubcategoria.text")); // NOI18N
        btnNuevaSubcategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaSubcategoriaActionPerformed(evt);
            }
        });

        jLabel5.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel5.text")); // NOI18N

        cboUnidadDeMedida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboUnidadDeMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUnidadDeMedidaActionPerformed(evt);
            }
        });

        btnNuevaMarca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnNuevaMarca.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.btnNuevaMarca.text")); // NOI18N
        btnNuevaMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaMarcaActionPerformed(evt);
            }
        });

        jLabel6.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel6.text")); // NOI18N

        tfprecocosto.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.tfprecocosto.text")); // NOI18N
        tfprecocosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfprecocostoKeyPressed(evt);
            }
        });

        jLabel9.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel9.text")); // NOI18N

        cboMarca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnNuevaUnidadMedida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnNuevaUnidadMedida.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.btnNuevaUnidadMedida.text")); // NOI18N
        btnNuevaUnidadMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaUnidadMedidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tfDescripcionRed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cboUnidadDeMedida, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfCodigoBarra, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cboSubCategoria, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfprecocosto, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnNuevaSubcategoria)
                                .addComponent(btnNuevaMarca)
                                .addComponent(btnNuevaUnidadMedida))
                            .addContainerGap(82, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(54, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDescripcionRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfCodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboUnidadDeMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfprecocosto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevaSubcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNuevaUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btnNuevaMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save.png"))); // NOI18N
        btnAceptar.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.btnAceptar.text")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jPanel2.border.title"))); // NOI18N

        jLabel7.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel7.text")); // NOI18N

        cboListaCosto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboListaCosto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboListaCostoItemStateChanged(evt);
            }
        });
        cboListaCosto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboListaCostoActionPerformed(evt);
            }
        });

        jLabel8.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jLabel8.text")); // NOI18N

        cboValor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboValorItemStateChanged(evt);
            }
        });

        jbActualizarPrecio.setText(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jbActualizarPrecio.text")); // NOI18N
        jbActualizarPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarPrecioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cboValor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(342, 342, 342))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cboListaCosto, 0, 98, Short.MAX_VALUE)
                        .addGap(326, 326, 326))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jbActualizarPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboListaCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jbActualizarPrecio))
        );

        tblPrecios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Lista de Precios", "Precio"
            }
        ));
        jScrollPane1.setViewportView(tblPrecios);
        if (tblPrecios.getColumnModel().getColumnCount() > 0) {
            tblPrecios.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.tblPrecios.columnModel.title1")); // NOI18N
            tblPrecios.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.tblPrecios.columnModel.title2")); // NOI18N
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(210, 210, 210)
                            .addComponent(btnAceptar))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(DiagArticulo.class, "DiagArticulo.jPanel2.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        aceptar();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnNuevaMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaMarcaActionPerformed
        agregarMarca();
        Comunes.cargarJCombo(cboMarca, MarcaFacade.getInstance().getTodos());
    }//GEN-LAST:event_btnNuevaMarcaActionPerformed

    private void btnNuevaSubcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaSubcategoriaActionPerformed
        agregarNuevaSubcategoria();
        Comunes.cargarJCombo(cboSubCategoria, SubCategoriaFacade.getInstance().getTodos());
    }//GEN-LAST:event_btnNuevaSubcategoriaActionPerformed

    private void cboListaCostoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboListaCostoActionPerformed
        Comunes.cargarJCombo(cboValor, ValorCostoFacade.getInstance().buscarPorid((ListaCosto) cboListaCosto.getSelectedItem()));
    }//GEN-LAST:event_cboListaCostoActionPerformed

    private void cboUnidadDeMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUnidadDeMedidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboUnidadDeMedidaActionPerformed

    private void btnNuevaUnidadMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaUnidadMedidaActionPerformed
        agregarUnidadMedida();
        Comunes.cargarJCombo(cboUnidadDeMedida, UnidadMedidaFacade.getInstance().getTodos());
    }//GEN-LAST:event_btnNuevaUnidadMedidaActionPerformed

    private void jbActualizarPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarPrecioActionPerformed

        cargarTablaArticulos();
        btnAceptar.setEnabled(true);
    }//GEN-LAST:event_jbActualizarPrecioActionPerformed

    private void cboListaCostoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboListaCostoItemStateChanged
        btnAceptar.setEnabled(false);
    }//GEN-LAST:event_cboListaCostoItemStateChanged

    private void cboValorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboValorItemStateChanged
        btnAceptar.setEnabled(false);
    }//GEN-LAST:event_cboValorItemStateChanged

    private void tfprecocostoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfprecocostoKeyPressed
        btnAceptar.setEnabled(false);
    }//GEN-LAST:event_tfprecocostoKeyPressed
    private void cargarTablaArticulos() {
        if (Comunes.validarBigDecimal(tfprecocosto.getText())) {
            modeloTablaPrecioArticulo = new ModeloTablaNoEditable();
            cargarEncabezadosTablaArticulos(modeloTablaPrecioArticulo);
            configurarTabla(tblPrecios);
            try {
                if (tipoOperacion.equals("Modificación")) {
                    System.out.println("entro por modificacion");
                    cargarPreciosListaPreciosParaEditar();
                } else {
                    lstPrecioArticulo = new ArrayList<PrecioArticulo>();
                    cargarPreciosListaPrecios();
                }

                cargarArticulos(lstPrecioArticulo);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Error: " + ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar el precio en formato numerico", "Mensaje", JOptionPane.ERROR_MESSAGE);
            tfprecocosto.requestFocus();

        }
    }

    private void cargarArticulos(List<PrecioArticulo> articulos) {
        try {
            modeloTablaPrecioArticulo = new ModeloTablaNoEditable();
            cargarEncabezadosTablaArticulos(modeloTablaPrecioArticulo);
            for (PrecioArticulo articulo : articulos) {
                cargarArticulo(articulo);
            }

            tblPrecios.setModel(modeloTablaPrecioArticulo);
            //Comunes.setOcultarColumnasJTable(tblPrecios, 0);
        } catch (Exception ex) {
            Logger.getLogger(DiagArticulo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarEncabezadosTablaArticulos(ModeloTablaNoEditable modeloTablaArticulos) {

        modeloTablaArticulos.addColumn("Lista de Precios");
        modeloTablaArticulos.addColumn("Precio");

        tblPrecios.setModel(modeloTablaArticulos);
    }

    private void cargarPreciosListaPrecios() {
        Iterator<ListaPrecio> itListaPrecio = ListaPrecioFacade.getInstance().getTodos().iterator();

        while (itListaPrecio.hasNext()) {

            ListaPrecio listaPrecio = itListaPrecio.next();

            porcentajeListaCosto = ((ValorCosto) cboValor.getSelectedItem()).getValor().divide(new BigDecimal(100));
            porcentajeListaPrecio = listaPrecio.getMargen().divide(new BigDecimal(100));
            precioListaCosto = BigDecimal.valueOf((Double.parseDouble(tfprecocosto.getText()))).subtract(BigDecimal.valueOf((Double.parseDouble(tfprecocosto.getText()))).multiply(porcentajeListaCosto));
            nuevoPrecio = precioListaCosto.add(precioListaCosto.multiply(porcentajeListaPrecio));
            PrecioArticulo a = new PrecioArticulo();
            System.out.println("el nuevo precio es" + nuevoPrecio);
            a.setPrecio(nuevoPrecio);
            //a.setArticulo(articulo);
            a.setListaPrecio(listaPrecio);
            lstPrecioArticulo.add(a);

        }
    }

    private void cargarPreciosListaPreciosParaEditar() {

        //porcentajeListaPrecio = listaPrecio.getMargen().divide(new BigDecimal(100));
        for (int i = 0; i < lstPrecioArticulo.size(); i++) {
            porcentajeListaPrecio = lstPrecioArticulo.get(i).getListaPrecio().getMargen().divide(new BigDecimal(100));
            porcentajeListaCosto = ((ValorCosto) cboValor.getSelectedItem()).getValor().divide(new BigDecimal(100));
            precioListaCosto = BigDecimal.valueOf((Double.parseDouble(tfprecocosto.getText()))).subtract(BigDecimal.valueOf((Double.parseDouble(tfprecocosto.getText()))).multiply(porcentajeListaCosto));
            nuevoPrecio = precioListaCosto.add(precioListaCosto.multiply(porcentajeListaPrecio));
            lstPrecioArticulo.get(i).setPrecio(nuevoPrecio);
        }

    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargarArticulo(PrecioArticulo articulo) {

        Object[] fila = new Object[2];

        fila[0] = articulo.getListaPrecio().getDescripcion();
        fila[1] = articulo.getPrecio();

        modeloTablaPrecioArticulo.addRow(fila);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagArticulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagArticulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagArticulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagArticulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagArticulo dialog = new DiagArticulo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnNuevaMarca;
    private javax.swing.JButton btnNuevaSubcategoria;
    private javax.swing.JButton btnNuevaUnidadMedida;
    private javax.swing.JComboBox cboListaCosto;
    private javax.swing.JComboBox cboMarca;
    private javax.swing.JComboBox cboSubCategoria;
    private javax.swing.JComboBox cboUnidadDeMedida;
    private javax.swing.JComboBox cboValor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizarPrecio;
    private javax.swing.JTable tblPrecios;
    private javax.swing.JTextField tfCodigoBarra;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfDescripcionRed;
    private javax.swing.JTextField tfprecocosto;
    // End of variables declaration//GEN-END:variables

    private void agregarNuevaSubcategoria() {
        DiagSubCategoria diagSubCategoria = new DiagSubCategoria(null, true, "Alta");
        diagSubCategoria.setLocation(Comunes.centrarDialog(diagSubCategoria));
        diagSubCategoria.setVisible(true);
    }

    private void inicializarComponentes() {

        Comunes.limitarTextField(tfDescripcionRed, 30);
        this.setTitle("Articulo");
        Comunes.cargarJCombo(cboSubCategoria, SubCategoriaFacade.getInstance().getTodos());
        Comunes.cargarJCombo(cboUnidadDeMedida, UnidadMedidaFacade.getInstance().getTodos());
        Comunes.cargarJCombo(cboListaCosto, ListaCostoFacade.getInstance().getTodos());
        Comunes.cargarJCombo(cboMarca, MarcaFacade.getInstance().getTodos());
        btnAceptar.setEnabled(false);

        if (tipoOperacion.equals("Modificación")) {
            cargarDatosArticulo();
            btnAceptar.setEnabled(true);
        }
        if (tipoOperacion.equals("Alta")) {
            lstPrecioArticulo = new ArrayList<PrecioArticulo>();

        }
    }

    private void aceptar() {
        if (tipoOperacion.equals("Alta")) {
            if (validarArticulo()) {
                articulo = new Articulo();
                articulo.setCodigoBarra(tfCodigoBarra.getText().toUpperCase());
                articulo.setDescripcion(tfDescripcion.getText().toUpperCase());
                articulo.setDescripcionReducida(tfDescripcionRed.getText().toUpperCase());
                articulo.setSubCategoria((SubCategoria) cboSubCategoria.getSelectedItem());
                articulo.setUnidadMedida((UnidadMedida) cboUnidadDeMedida.getSelectedItem());
                articulo.setPrecioCosto(redondear(new BigDecimal(tfprecocosto.getText())));
                articulo.setMarca((Marca) cboMarca.getSelectedItem());
                articulo.setDescuentoCosto((ValorCosto) cboValor.getSelectedItem());

                ArticuloFacade.getInstance().alta(articulo);
                Iterator<PrecioArticulo> itartprecio = lstPrecioArticulo.iterator();

                while (itartprecio.hasNext()) {

                    PrecioArticulo precioArt = itartprecio.next();
                    precioArt.setArticulo(articulo);
                    PrecioArticuloFacade.getInstance().alta(precioArt);

                }
                JOptionPane.showMessageDialog(this, "Articulo agregado!");
                this.dispose();

            }

        } else if (tipoOperacion.equals("Modificación")) {
            if (validarArticulo()) {
                articulo.setCodigoBarra(tfCodigoBarra.getText().toUpperCase());
                articulo.setDescripcion(tfDescripcion.getText().toUpperCase());
                articulo.setDescripcionReducida(tfDescripcionRed.getText());
                articulo.setSubCategoria((SubCategoria) cboSubCategoria.getSelectedItem());
                articulo.setUnidadMedida((UnidadMedida) cboUnidadDeMedida.getSelectedItem());
                articulo.setPrecioCosto(redondear(new BigDecimal(tfprecocosto.getText())));
                articulo.setMarca((Marca) cboMarca.getSelectedItem());
                articulo.setDescuentoCosto((ValorCosto) cboValor.getSelectedItem());
                ArticuloFacade.getInstance().modificar(articulo);
                Iterator<PrecioArticulo> itartprecio = lstPrecioArticulo.iterator();

                while (itartprecio.hasNext()) {

                    PrecioArticulo precioArt = itartprecio.next();
                    System.out.println("el id es" + precioArt.getId());
                    precioArt.setArticulo(articulo);
                    PrecioArticuloFacade.getInstance().modificar(precioArt);

                }
                JOptionPane.showMessageDialog(this, "Articulo modificado!");
                this.dispose();

            }
        }

    }

    private void cargarDatosArticulo() {
        try {
            tfDescripcion.setText(articulo.getDescripcion());
        } catch (Exception e) {

        }
        try {
            tfDescripcionRed.setText(articulo.getDescripcionReducida());
        } catch (Exception e) {

        }
        try {
            tfCodigoBarra.setText(articulo.getCodigoBarra());
        } catch (Exception e) {

        }
        try {
            tfprecocosto.setText(articulo.getPrecioCosto().toString());
        } catch (Exception e) {

        }
        try {
            cboSubCategoria.setSelectedItem(articulo.getSubCategoria());
        } catch (Exception e) {

        }
        try {
            cboUnidadDeMedida.setSelectedItem(articulo.getUnidadMedida());
        } catch (Exception e) {

        }

        try {
            cboMarca.setSelectedItem(articulo.getMarca());
        } catch (Exception e) {

        }
        try {
            cboValor.setSelectedItem(articulo.getDescuentoCosto());
        } catch (Exception e) {

        }
        try {
            cboListaCosto.setSelectedItem(articulo.getDescuentoCosto().getListaCosto());
        } catch (Exception e) {

        }
        cargarArticulos(lstPrecioArticulo);
    }

    private boolean validarArticulo() {
        //boolean flag=Boolean.TRUE;
        if (tfDescripcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El articulo debe tener nombre", "Mensaje", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (tfDescripcionRed.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El articulo debe tener Descripcion", "Mensaje", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (tfCodigoBarra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El articulo debe tener Codigo", "Mensaje", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (tipoOperacion.equals("Alta")) {
            if (ArticuloFacade.getInstance().buscarCodigoBarra(tfCodigoBarra.getText())) {
                JOptionPane.showMessageDialog(this, "El codigo de Articulo ya Existe", "Mensaje", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        return true;
    }

    private void cargarDatos() {

    }

    private void agregarUnidadMedida() {
        DiagUnidadMedida diagUnidadMedida = new DiagUnidadMedida(null, true, "Alta");
        diagUnidadMedida.setLocationRelativeTo(null);
        diagUnidadMedida.setVisible(true);
    }

    private void agregarMarca() {
        DiagMarca diagMarca = new DiagMarca(null, true, "Alta");
        diagMarca.setLocationRelativeTo(null);
        diagMarca.setVisible(true);
    }

    private void eliminarUnidadMedida() {
        int i = JOptionPane.showConfirmDialog(this, "¿Desea eliminar Unidad De Medida?", "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
        if (i == 0) {
            try {
                UnidadMedidaFacade.getInstance().eliminar(((UnidadMedida) cboUnidadDeMedida.getSelectedItem()).getId());
                JOptionPane.showMessageDialog(null, "Unidad de Medida eliminada");
                Comunes.cargarJCombo(cboUnidadDeMedida, UnidadMedidaFacade.getInstance().getTodos());

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No se puede eliminar, unidad de medida en uso!");
            }
        }
    }

    private void eliminarSubcategoria() {
        int i = JOptionPane.showConfirmDialog(this, "¿Desea eliminar Subcategoria?", "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
        if (i == 0) {
            try {
                SubCategoriaFacade.getInstance().eliminar(((SubCategoria) cboSubCategoria.getSelectedItem()).getId());
                JOptionPane.showMessageDialog(null, "Subcategoria eliminada");
                Comunes.cargarJCombo(cboSubCategoria, SubCategoriaFacade.getInstance().getTodos());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No se puede eliminar, Subcategoria en uso!");
            }
        }
    }
}
